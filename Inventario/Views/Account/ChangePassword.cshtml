@using Inventario.Domain.ConfigurationModels;
@using Microsoft.Extensions.Options;
@model ChangePasswordModel

@inject IOptions<GoogleRecaptchaSettings> _options

<div class="row">
    <div class="col-md-4">
        <h1>ChangePassword</h1>
        <hr />
        <form asp-action="ChangePassword" method="post">
            
            <div asp-validation-summary="ModelOnly"></div>
            <div>
                <label asp-for="CurrentPassword"></label>
                <input type="password" id="currentPassword" asp-for="CurrentPassword" class="form-control" />
                <span asp-validation-for="CurrentPassword"></span>
            </div>
            <div>
                <label asp-for="NewPassword" class="control-label"></label>
                <input type="password" id="newPassword" asp-for="NewPassword" class="form-control" />
                <span asp-validation-for="NewPassword"></span>
            </div>
            <div>
                <label asp-for="ConfirmNewPassword"></label>
                <input type="password" id="confirmNewPassword" asp-for="ConfirmNewPassword" class="form-control" />
                <span asp-validation-for="ConfirmNewPassword"></span>
            </div>
            <br />
            <div>
                <button type="submit" class="btn btn-primary">Change Password</button>
            </div>
        </form>
    </div>
</div>



<script src="https://www.google.com/recaptcha/api.js?render=@_options.Value.SiteKey"></script>

<script>
    function GetToken() {
        grecaptcha.ready(function () {
            grecaptcha.execute('@_options.Value.SiteKey', { action: 'submit' }).then(function (token) {
                // Add your logic to submit to your backend server here.
                console.log(token);
                $("token").val(token);
            });
        });
    }
    $(function () {
        setInterval(GetToken(), 115000);
        GetToken();
    });

</script>

